{
  "swagger": "2.0",
  "info": {
    "title": "modeldb/Lineage.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/lineage/addLineage": {
      "post": {
        "operationId": "LineageService_addLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAddLineageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbAddLineage"
            }
          }
        ],
        "tags": [
          "LineageService"
        ]
      }
    },
    "/lineage/deleteLineage": {
      "post": {
        "operationId": "LineageService_deleteLineage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteLineageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbDeleteLineage"
            }
          }
        ],
        "tags": [
          "LineageService"
        ]
      }
    },
    "/lineage/findAllInputs": {
      "post": {
        "operationId": "LineageService_findAllInputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbFindAllInputsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindAllInputs"
            }
          }
        ],
        "tags": [
          "LineageService"
        ]
      }
    },
    "/lineage/findAllInputsOutputs": {
      "post": {
        "operationId": "LineageService_findAllInputsOutputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbFindAllInputsOutputsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindAllInputsOutputs"
            }
          }
        ],
        "tags": [
          "LineageService"
        ]
      }
    },
    "/lineage/findAllOutputs": {
      "post": {
        "operationId": "LineageService_findAllOutputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbFindAllOutputsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindAllOutputs"
            }
          }
        ],
        "tags": [
          "LineageService"
        ]
      }
    }
  },
  "definitions": {
    "modeldbAddLineage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "If not provided, a new ID will be created"
        },
        "input": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntry"
          },
          "description": "An output can be associated with at most one lineage entry. That is the same as saying\nsomething can't be created by two separated paths.\nWe also associated all inputs with all outputs. If the user wants more fine-grained control,\nthey can create multiple entries."
        },
        "output": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntry"
          }
        }
      },
      "description": "Add every item of \"input\" as a parent of every item on \"output\"."
    },
    "modeldbAddLineageResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "modeldbDeleteLineage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "input": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntry"
          }
        },
        "output": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntry"
          }
        }
      },
      "description": "Delete every item of \"input\" as a parent of every item on \"output\"."
    },
    "modeldbDeleteLineageResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbFindAllInputs": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntryBatchRequest"
          }
        }
      },
      "description": "For each item provided, list its inputs.\nThis operation is batched by default. If \"items\" contains N elements,\nthen Response.inputs will contain N elements, where each element\nis the set of inputs for the corresponding i-th item provided in the\nrequest."
    },
    "modeldbFindAllInputsOutputs": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntryBatchRequest"
          }
        }
      },
      "description": "For each item provided, list its inputs and outputs.\nThis operation is batched by default. If \"items\" contains N elements,\nthen Response.inputs and Response.outputs will contain N elements each, where each element\nis the set of inputs and outputs for the corresponding i-th item provided in the\nrequest."
    },
    "modeldbFindAllInputsOutputsResponse": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntryBatchResponse"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntryBatchResponse"
          }
        }
      }
    },
    "modeldbFindAllInputsResponse": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntryBatchResponse"
          }
        }
      }
    },
    "modeldbFindAllOutputs": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntryBatchRequest"
          }
        }
      },
      "description": "For each item provided, list its outputs.\nThis operation is batched by default. If \"items\" contains N elements,\nthen Response.outputs will contain N elements, where each element\nis the set of outputs for the corresponding i-th item provided in the\nrequest."
    },
    "modeldbFindAllOutputsResponse": {
      "type": "object",
      "properties": {
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntryBatchResponse"
          }
        }
      }
    },
    "modeldbLineageEntry": {
      "type": "object",
      "properties": {
        "experiment_run": {
          "type": "string"
        },
        "blob": {
          "$ref": "#/definitions/modeldbVersioningLineageEntry"
        }
      }
    },
    "modeldbLineageEntryBatchRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "entry": {
          "$ref": "#/definitions/modeldbLineageEntry"
        }
      },
      "description": "Represent a set of lineage items, essentially an array so that it can be embedded on other proto messages."
    },
    "modeldbLineageEntryBatchResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntryBatchResponseSingle"
          }
        }
      }
    },
    "modeldbLineageEntryBatchResponseSingle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbLineageEntry"
          }
        }
      },
      "title": "Returns the ID of the lineage entry and the set of items corresponding to that entry"
    },
    "modeldbVersioningLineageEntry": {
      "type": "object",
      "properties": {
        "repository_id": {
          "type": "string",
          "format": "uint64"
        },
        "commit_sha": {
          "type": "string"
        },
        "location": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "basePath": "/v1"
}
